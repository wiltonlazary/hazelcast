
Document Revision History


Chapter 7 - Rolling Member Upgrades		
- Added as a new chapter.

Chapter 8 - Distributed Data Structures	
- Queue: Updated by adding split-brain protection content.
- Ringbuffer: Added Ringbuffer with Persistent Datastore as a new section.
- Locking Maps: Updated by adding split-brain protection content.
- Added Overview of Hazelcast Distributed Objects, Loading and Destroying a Distributed Object and Controlling Partitions as new sections.
- Lock: Updated by adding split-brain protection content.

Chapter 10 - Distributed Computing
- Entry Processor: Added a warning to the introduction.

Chapter 11 - Distributed Query
- Explanation for the __key attribute added under Querying with SQL section.
- Fast-Aggregations: Added as a new section.
- Projections: Added as a new section.

Chapter 15 - Storage
- Hot Restart Persistence: Added example scenarios to give more idea on how the restart process and force start works. Added the new configuration element parallelism. Added the new section Moving/Copying Hot Restart Data. Added the new section Partial Start and the new configuration element cluster-data-recovery-policy. Added the new section Hot Backup.
- Hazelcast Striim: Added as a new section.

Chapter 19 - Management
- Diagnostics:Added as a new section to explain the diagnostic utility of Hazelcast.
- Partial start related content added to Using REST API for Cluster Management and Using the Script cluster.sh sections.
- Using the Script cluster.sh: Updated by adding new operations and parameters related to Rolling Member Upgrade procedures.

Chapter 21 - Performance
- Near Cache: Added as a new section to consolidate all near cache related content in the Reference Manual. Added also a new content, Near Cache Eventual Consistency

Chapter 22 - Hazelcast Simulator
- Moved the content to Simulator's own GitHub repository at Hazelcast Simulator.

Chapter 27 - System Properties
Added definitions for the following new properties: 
- hazelcast.compatibility.3.6.server and hazelcast.compatibility.3.6.client: Please refer to the Upgrading from 3.x section.
- hazelcast.http.healthcheck.enabled: Enabler for a simple HTTP based health check utility. Please refer to the System Properties chapter. 
- hazelcast.invalidation.max.tolerated.miss.count 
- hazelcast.invalidation.reconciliation.interval.seconds 
- hazelcast.map.invalidation.batchfrequency.seconds 
- hazelcast.map.invalidation.batch.enabled 
- hazelcast.map.invalidation.batch.size

Chapter 30 - FAQ
- Added new questions/answers.

Chapter 31 - Glossary
- Added new glossary items.
